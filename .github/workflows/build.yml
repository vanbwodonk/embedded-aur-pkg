name: BUILD

on:
  push:
  schedule:
    - cron:  '1 */8 * * *'

jobs:
  buildAUR:
    strategy:
      matrix:
        repos: [ aria2-pro, can-utils, pico-sdk, picotool, esp-idf, oss-cad-suite-build-bin, hterm, stm32cubemx, stm32cubeide, saleae-logic2, packetsender, dsview, xc3sprog-svn, eagle, squareline-studio, mavproxy, jsbsim-git, python-pymavlink, easyeda-bin, easyeda2kicad]
        include:
          - repos: dsview
            preinstall-pkgs: "libusb"
          - repos: xc3sprog-svn
            preinstall-pkgs: "svn"

      fail-fast: false
      
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - uses: ./build-aur-action
      with:
        repo-name: ${{ matrix.repos }}
        preinstallPkgs: ${{ matrix.preinstall-pkgs }}
    
    - uses: actions/upload-artifact@v3
      with:
        path: ./*/*.pkg.tar*
        name: ${{ matrix.repos }}
        if-no-files-found: error
        
    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        tag: "packages"
        artifacts: "./*/*.zst"
        token: ${{ secrets.GH_TOKEN }}

  # buildGOWIN:
  #   strategy:
  #     matrix:
  #       repos: [gowin-eda-ide]
  #
  #     fail-fast: false
  #
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #   - uses: actions/checkout@v3
  #
  #   - uses: ./build-gowin-action
  #     with:
  #       repo-name: ${{ matrix.repos }}
  #       preinstallPkgs: ${{ matrix.preinstall-pkgs }}
  #
  #   - uses: actions/upload-artifact@v3
  #     with:
  #       path: ./*/*.pkg.tar.zst
  #       name: ${{ matrix.repos }}
  #       if-no-files-found: error
  #
  #   - uses: ncipollo/release-action@v1
  #     with:
  #       allowUpdates: true
  #       tag: "packages"
  #       artifacts: "./*/*.zst"
  #       token: ${{ secrets.GH_TOKEN }}

  buildGOWINedu:
    strategy:
      matrix:
        repos: [gowin-eda-edu-ide]

      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: ./build-gowin-edu-action
      with:
        repo-name: ${{ matrix.repos }}
        preinstallPkgs: ${{ matrix.preinstall-pkgs }}

    - uses: actions/upload-artifact@v3
      with:
        path: ./*/*.pkg.tar.zst
        name: ${{ matrix.repos }}
        if-no-files-found: error

    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        tag: "packages"
        artifacts: "./*/*.zst"
        token: ${{ secrets.GH_TOKEN }}

  buildNonAUR:
    strategy:
      matrix:
        PKGBUILDs: [avrdudess, dsview-master, progit, serialplot-git]

      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Non-AUR packages
        id: makepkg
        uses: ./build-nonaur-action
        with:
          pkgdir: ${{ matrix.PKGBUILDs }}
          aurDeps: true

      - uses: actions/upload-artifact@v3
        with:
          path: ./*/*.pkg.tar.zst
          name: ${{ matrix.PKGBUILDs }}
          if-no-files-found: error

      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          tag: "packages"
          artifacts: ${{ steps.makepkg.outputs.pkgfile0 }}
          token: ${{ secrets.GH_TOKEN }}
